name: Terraform CI/CD


on:
pull_request:
paths:
- 'infra/**'
push:
branches: [ main ]
paths:
- 'infra/**'


permissions:
contents: read
id-token: write


env:
TF_IN_AUTOMATION: true
AWS_REGION: eu-central-1


jobs:
terraform:
runs-on: ubuntu-latest


defaults:
run:
working-directory: infra


steps:
- name: Checkout
uses: actions/checkout@v4


- name: Setup Terraform
uses: hashicorp/setup-terraform@v3
with:
terraform_version: 1.6.6


- name: Configure AWS Credentials
uses: aws-actions/configure-aws-credentials@v4
with:
aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
aws-region: ${{ env.AWS_REGION }}


- name: Terraform Init
run: terraform init


- name: Terraform Format
run: terraform fmt -check


- name: Terraform Validate
run: terraform validate


- name: Terraform Plan
if: github.event_name == 'pull_request'
env:
TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
run: |
cp terraform.tfvars.example terraform.tfvars
# You may set non-secret vars here or commit your own tfvars in repo (without secrets)
terraform plan -no-color -out=tfplan


- name: Terraform Apply (on push to main)
if: github.event_name == 'push'
env:
TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
run: |
cp terraform.tfvars.example terraform.tfvars
terraform apply -auto-approve